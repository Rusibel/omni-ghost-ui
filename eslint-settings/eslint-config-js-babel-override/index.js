module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2021,
    sourceType: 'module',
    project: './tsconfig.json',
  },
  plugins: ['@typescript-eslint'],
  overrides: [
    {
      files: ['*.js', '*.jsx'],
      parser: '@babel/eslint-parser',
      parserOptions: {
        sourceType: 'module',
        ecmaFeatures: {
          jsx: true,
        },
        babelOptions: {
          configFile: './babel.config.js',
        },
      },
      plugins: ['@babel'],
      rules: {
        'no-invalid-this': ['off'],
        'no-redeclare': ['error'],
        'no-unused-expressions': ['error'],
        'no-unused-vars': [
          'error',
          {
            vars: 'all',
            args: 'after-used',
            ignoreRestSiblings: false,
          },
        ],
        'no-useless-constructor': ['error'],
        'require-await': ['error'],
        'no-use-before-define': [
          'error',
          {
            variables: true,
            functions: false,
            classes: true,
          },
        ],
        'no-extra-semi': ['error'],
        '@babel/no-invalid-this': ['error'],
        '@typescript-eslint/adjacent-overload-signatures': ['off'],
        '@typescript-eslint/array-type': ['off'],
        '@typescript-eslint/await-thenable': ['off'],
        '@typescript-eslint/naming-convention': ['off'],
        '@typescript-eslint/ban-ts-comment': ['off'],
        '@typescript-eslint/consistent-type-assertions': ['off'],
        '@typescript-eslint/consistent-type-definitions': ['off'],
        '@typescript-eslint/explicit-function-return-type': ['off'],
        '@typescript-eslint/explicit-member-accessibility': ['off'],
        '@typescript-eslint/explicit-module-boundary-types': ['off'],
        '@typescript-eslint/member-delimiter-style': ['off'],
        '@typescript-eslint/no-extra-parens': ['off'],
        '@typescript-eslint/no-extra-semi': ['off'],
        '@typescript-eslint/no-floating-promises': ['off'],
        '@typescript-eslint/no-empty-interface': ['off'],
        '@typescript-eslint/no-explicit-any': ['off'],
        '@typescript-eslint/no-var-requires': ['off'],
        '@typescript-eslint/no-shadow': ['off'],
        '@typescript-eslint/no-inferrable-types': ['off'],
        '@typescript-eslint/no-invalid-this': ['off'],
        '@typescript-eslint/no-redeclare': ['off'],
        '@typescript-eslint/no-non-null-assertion': ['off'],
        '@typescript-eslint/no-misused-new': ['off'],
        '@typescript-eslint/no-misused-promises': ['off'],
        '@typescript-eslint/no-parameter-properties': ['off'],
        '@typescript-eslint/no-unnecessary-type-assertion': ['off'],
        '@typescript-eslint/no-unused-expressions': ['off'],
        '@typescript-eslint/no-unused-vars': ['off'],
        '@typescript-eslint/no-use-before-define': ['off'],
        '@typescript-eslint/no-useless-constructor': ['off'],
        '@typescript-eslint/promise-function-async': ['off'],
        '@typescript-eslint/require-await': ['off'],
        '@typescript-eslint/restrict-plus-operands': ['off'],
        '@typescript-eslint/typedef': ['off'],
        '@typescript-eslint/unified-signatures': ['off'],
      },
    },
  ],
};
